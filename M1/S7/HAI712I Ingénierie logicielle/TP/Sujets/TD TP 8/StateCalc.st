Model subclass: #Calc	instanceVariableNames: 'acc1 op acc2 etatCourant etats'	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!Calc methodsFor: 'metier' stamp: 'cd 12/8/2013 15:16'!result	^acc1	! !!Calc methodsFor: 'metier' stamp: 'cd 12/8/2013 00:35'!enter: s	etatCourant enter: s! !!Calc methodsFor: 'metier' stamp: 'cd 12/10/2013 11:20'!compute	acc1 := acc1 perform: op with: acc2.	self changed: #result	! !!Calc methodsFor: 'accessing' stamp: 'cd 12/10/2013 11:36'!acc1	^ acc1! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 10:31'!acc1: anObject	acc1 := anObject! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 00:32'!etatCourant: n	etatCourant := etats at: n	! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 15:11'!acc2		^ acc2! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 15:22'!op	^op! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 15:07'!op: anObject	op := anObject.	self changed: #op.! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 15:13'!acc2: anObject	acc2 := anObject.	self changed: #acc2.! !!Calc methodsFor: 'accessing' stamp: 'cd 12/8/2013 16:47'!etats: anObject		etats := anObject! !!Calc methodsFor: 'initialize-release' stamp: 'cd 12/10/2013 11:31'!initialize	"etats := Array new: 3.	etats at: 1 put: (ENombre1 for: self).	etats at: 2 put: (EOperateur for: self).	etats at: 3 put: (ENombre2 for: self)."	etats := {ENombre1 for: self. EOperateur for: self. ENombre2 for: self}.	self etatCourant: 1.	acc1 := 0.	op := #+.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Calc class	instanceVariableNames: ''!!Calc class methodsFor: 'exemples' stamp: 'cd 12/2/2019 19:02'!exemple3	"Calc exemple3"	| CB |	CB := Calc newWithViewClass: CalcView.	CB enter: '123'.	CB enter: '*'.	CB enter: '10'.	CB enter: '36'.	CB enter: 'gcd:'.	CB enter: '48'! !!Calc class methodsFor: 'exemples' stamp: 'cd 12/8/2013 15:45'!exemple1	| CA |	CA := Calc new.	CA enter: '123'.	CA enter: '+'.	CA enter: '10'! !!Calc class methodsFor: 'exemples' stamp: 'cd 12/2/2019 18:55'!oldexemple3	"Calc exemple3"	| CB |	CB := Calc newWithViewClass: TranscriptCalc.	CB enter: '123'.	CB enter: '*'.	CB enter: '10'.	CB enter: '36'.	CB enter: 'gcd:'.	CB enter: '48'! !!Calc class methodsFor: 'exemples' stamp: 'cd 12/2/2019 18:54'!exemple2	| CB |	CB := Calc newWithViewClass: CalcView.	CB enter: '123'.	CB enter: '*'.	CB enter: '10'.	CB enter: '20'! !!Calc class methodsFor: 'exemples' stamp: 'cd 12/2/2019 18:54'!oldexemple2	| CB |	CB := Calc newWithViewClass: TranscriptCalc.	CB enter: '123'.	CB enter: '*'.	CB enter: '10'.	CB enter: '20'! !!Calc class methodsFor: 'exemples' stamp: 'cd 12/8/2013 16:45'!exemple4	"Calc exemple4"	| CA CB |	CA := Calc new.	CB := Calc new.	CA enter: '123'.	CB enter: '246'.	CA enter: '+'.	CB enter: '*'.	CA enter: '10'.	CB enter: '20'.	^CA result + CB result! !!Calc class methodsFor: 'instance-creation' stamp: 'cd 12/2/2019 18:53'!newWithViewClass: aViewClass	| aCalc aView |	aCalc := self new.	aView := aViewClass new.	aCalc addDependent: aView.	aView model: aCalc.	aView open.	^ aCalc! !Model subclass: #CalcView	instanceVariableNames: 'model stream'	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 19:05'!model: anObject		model := anObject! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 18:37'!characterLimit	^ 20000! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 18:41'!cr	"Output a cr on the receiver, buffered and not yet shown"		self show: Character cr! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 18:39'!interactionModel	^self! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 19:12'!open	"Calc exemple3"	| window m |	stream := String new writeStream.	window := (SystemWindow labelled: 'CalcView') model: self.	m := RubPluggableTextMorph new		getTextSelector: #contents;		setTextSelector: #clear;		on: self.		"beForSmalltalkScripting"	m onAnnouncement: MorphDeleted do: [ self announcer unsubscribe: m  ].	window addMorph: m frame: (0 @ 0 corner: 1 @ 1).	stream nextPutAll: '>'.	^window openInWorld! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 17:36'!update: info	(info = #result)	ifTrue: [		self show: '= '.		self show: (model perform: info).		self cr; show: '>'.		]	ifFalse: [ 		self show: (model perform: info).		self show: ' '.	 	]! !!CalcView methodsFor: 'instance creation' stamp: 'cd 12/2/2019 19:05'!show: anObject	"Calc exemple3"	"Output anObject asString on the receiver and show the output"		stream nextPutAll: anObject asString.		self changed: #appendEntry.  stream resetContents! !!CalcView methodsFor: 'accessing' stamp: 'cd 12/2/2019 18:11'!contents	^stream contents! !Object subclass: #EtatCalc	instanceVariableNames: 'calc'	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!EtatCalc methodsFor: 'initialize-release' stamp: 'cd 12/8/2013 00:17'!initialize: aCalc	calc := aCalc.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EtatCalc class	instanceVariableNames: ''!!EtatCalc class methodsFor: 'instance creation' stamp: 'cd 12/10/2013 08:48'!new: aCalc	^self new initialize: aCalc! !!EtatCalc class methodsFor: 'instance creation' stamp: 'cd 12/8/2013 00:15'!for: aCalc	^self new initialize: aCalc! !EtatCalc subclass: #ENombre1	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!ENombre1 methodsFor: 'metier' stamp: 'cd 12/8/2013 10:32'!enter: s	calc acc1: s asNumber.	calc etatCourant: 2.	calc changed: #acc1		! !EtatCalc subclass: #ENombre2	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!ENombre2 methodsFor: 'metier' stamp: 'cd 12/8/2013 15:13'!enter: s	calc acc2: s asNumber.	calc compute.	calc etatCourant: 1.	! !EtatCalc subclass: #EOperateur	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!EOperateur methodsFor: 'metier' stamp: 'cd 12/8/2013 00:34'!enter: s	calc op: s asSymbol.	calc etatCourant: 3.! !ThreadSafeTranscript subclass: #TranscriptCalc	instanceVariableNames: 'model'	classVariableNames: ''	poolDictionaries: ''	category: 'ExosPharo-7-StateCalc'!!TranscriptCalc commentStamp: 'cd 12/2/2019 18:42' prior: 0!Créé avec Pharo3, ne fonctionne plus.Remplacé par CalcView en copie-collé.!!TranscriptCalc methodsFor: 'initialize' stamp: 'cd 11/28/2019 14:07'!open	super open.	self nextPutAll: '>'; flush.! !!TranscriptCalc methodsFor: 'updating' stamp: 'cd 11/28/2019 14:48'!update: info	(info = #result)	ifTrue: [		self show: '= '.		self show: (model perform: info).		self cr; show: '>'.		]	ifFalse: [ 		self show: (model perform: info).		self show: ' '.	 	]! !!TranscriptCalc methodsFor: 'accessing' stamp: 'cd 12/8/2013 10:59'!title	^'CalculetteInfo'! !!TranscriptCalc methodsFor: 'accessing' stamp: 'cd 12/8/2013 14:51'!model: anObject		model := anObject! !